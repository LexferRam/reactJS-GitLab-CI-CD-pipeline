image: docker:git
services:
  - docker:dind

#PREDEFINED VARIABLES GITLAB CI/CD
#https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
#NOTA: para que funcione el login las variables creadas en settings>CI/CD>variables de entorno no deben estar protected

stages:
  - Build
  - image Production
  - image Development

# COMPILE THE PROJECT
build-project:
  stage: Build
  image: mhart/alpine-node:11
  script:
    - echo AMBIENTE = $REACT_APP_ENV, COMPANIA = $REACT_APP_COMPANIA
    - npm install
    - npm run build
  artifacts:
    paths:
      - build/

# (MASTER)Build image and upload to registry
build-docker-img-prod:
  stage: image Production
  script:
    - |
      if [ "$REACT_APP_COMPANIA" == "PIRAMIDE" ]; then
        docker login registry.gitlab.com -u $USER -p $PASSWORD
        docker build --pull -t $CI_REGISTRY_IMAGE:prod-pira-$CI_COMMIT_SHORT_SHA .
        docker push $CI_REGISTRY_IMAGE:prod-pira-$CI_COMMIT_SHORT_SHA
        docker images
      if [ "$REACT_APP_COMPANIA" == "OCEANICA" ]; then
        docker login registry.gitlab.com -u $USER -p $PASSWORD
        docker build --pull -t $CI_REGISTRY_IMAGE:prod-ocea-$CI_COMMIT_SHORT_SHA .
        docker push $CI_REGISTRY_IMAGE:prod-ocea-$CI_COMMIT_SHORT_SHA
        docker images
      fi
  only:
    - master

# (DEVELOP)Build image and upload to registry
build-docker-img-dev:
  stage: image Development
  script:
    - |
      if [ "$REACT_APP_COMPANIA" == "PIRAMIDE" ]; then
        docker login registry.gitlab.com -u $USER -p $PASSWORD  
        docker build --pull -t $CI_REGISTRY_IMAGE:desa-pira-$CI_COMMIT_SHORT_SHA .
        docker push $CI_REGISTRY_IMAGE:desa-pira-$CI_COMMIT_SHORT_SHA
        docker images
      else
        docker login registry.gitlab.com -u $USER -p $PASSWORD  
        docker build --pull -t $CI_REGISTRY_IMAGE:desa-ocea-$CI_COMMIT_SHORT_SHA .
        docker push $CI_REGISTRY_IMAGE:desa-ocea-$CI_COMMIT_SHORT_SHA
        docker images      
      fi
  only:
    - desarrollo
# # (DEVELOP)Build image and upload to registry
# build-docker-img-dev:
#   stage: image Development
#   script:
#     - docker login registry.gitlab.com -u $USER -p $PASSWORD
#     - docker build --pull -t $CI_REGISTRY_IMAGE:dev-$CI_COMMIT_SHORT_SHA .
#     - docker push $CI_REGISTRY_IMAGE:dev-$CI_COMMIT_SHORT_SHA
#     - docker images
#   only:
#     - desarrollo
